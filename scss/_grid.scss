@use "sass:math";

$grid-columns: 12;
$grid-gaps: (
  "0": 0px,
  "1": 10px,
  "2": 20px,
  "3": 30px
);
$layout-values: (
  "start": flex-start,
  "end": flex-end,
  "center": center,
  "between": space-between, 
  "around": space-around
);

.container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 20px;
  box-sizing: border-box;
}

.row {
  display: flex;
  flex-flow: row wrap;
}

// col classes
@for $i from 1 through $grid-columns {
  @include xs {
    .col-#{$i}-xs {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
    
@for $i from 1 through $grid-columns {
  @include sm {
    .col-#{$i}-sm {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@for $i from 1 through $grid-columns {
  @include md {
    .col-#{$i}-md {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }    
}

@for $i from 1 through $grid-columns {
  @include lg {
    .col-#{$i}-lg {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@for $i from 1 through $grid-columns {  
  @include xl {
    .col-#{$i}-xl {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

// grid gaps
@each $k, $v in $grid-gaps {
  .gap-#{$k} > * {
    padding: $v;
  }

  .gap-#{$k} {
    margin-left: -$v;
    margin-right: -$v;
  }
}

// flex controls (naming conventions borrowed from tailwind)
@each $k, $v in $layout-values {
  .justify-#{$k} {
    justify-content: $v;
  }

  .items-#{$k} {
    align-items: $v;
  }
}

@include xs {
  @each $k, $v in $layout-values {
    .justify-#{$k}-xs {
      justify-content: $v;
    }
  
    .items-#{$k}-xs {
      align-items: $v;
    }
  } 
}

@include sm {
  @each $k, $v in $layout-values {
    .justify-#{$k}-sm {
      justify-content: $v;
    }
  
    .items-#{$k}-sm {
      align-items: $v;
    }
  } 
}

@include md {
  @each $k, $v in $layout-values {
    .justify-#{$k}-md {
      justify-content: $v;
    }
  
    .items-#{$k}-md {
      align-items: $v;
    }
  } 
}

@include lg {
  @each $k, $v in $layout-values {
    .justify-#{$k}-lg {
      justify-content: $v;
    }
  
    .items-#{$k}-lg {
      align-items: $v;
    }
  } 
}

@include xl {
  @each $k, $v in $layout-values {
    .justify-#{$k}-xl {
      justify-content: $v;
    }
  
    .items-#{$k}-xl {
      align-items: $v;
    }
  } 
}